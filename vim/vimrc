" pathogen
call pathogen#infect()
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

" no vi compability
set nocompatible

" use utf8 as encoding
set encoding=utf-8
set fileencoding=utf-8

" appearance options
set t_Co=256
colorscheme molokai
"colorscheme holokai

" highlight current line
set cursorline

" show hidden symbols
set list
set listchars=tab:▸\ ,eol:¬

" map <leader> to ,
let mapleader = ","
let maplocalleader = ","

" show title
set title

" show line numbers
set number

" size of line numbers
set numberwidth=3

" keep 5 lines around cursor, change behavior of H and L
set scrolloff=5

" syntax highlighting
syntax on

" enable auto indentation
"set autoindent
set smartindent

" use the appropriate number of spaces to insert a <Tab>
set expandtab

set shiftwidth=4

set tabstop=4

"search incremently
set incsearch
set ignorecase

" command-line completion operates in an enhanced mode
set wildmenu

" highlight all search pattern matches
set hlsearch

" <Leader>l redraws the screen and removes any search highlighting.
nnoremap <silent> <Leader>l :nohl<CR>

" Make Y consistent with C and D.  See :help Y.
nnoremap Y y$

" backspacing over indent, end-of-line and linestart in insert mode
set backspace=indent,eol,start

" Enable filetype plugin
filetype plugin on
filetype indent on

" Python
au FileType python setlocal expandtab shiftwidth=4 tabstop=8 softtabstop=4

" Python Auto-Completion
"autocmd FileType python setlocal omnifunc=RopeCompleteFunc
" start python on <F5>
autocmd FileType python map <F5> :w<CR>:!python "%"<CR>

set completeopt=longest,menu,menuone,preview

" close doc window automatically
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" maximum number of items to show in the popup menu for
" Insert mode completion
set pumheight=5

" Highlight trailing whitespace in vim on non empty lines,
" but not while typing in insert mode!
au Syntax * match Error /\s\+\%#\@<!$/

" code folding
set foldmethod=indent
set foldlevel=99
set foldminlines=5

" map - to fold code
nmap - zc

" map + to unfold code
nmap + zo

set pastetoggle=<F2>

" set size of helpwindow
set helpheight=10

" change :W to :w on cmd
cnoreabbrev W w

" Tab navigation
nmap <C-t> :tabnew<CR>
imap <C-t> <Esc>:tabnew<CR>i
nnoremap <C-Left> :tabprevious<CR>
nnoremap <C-Right> :tabnext<CR>

" Fix arrow keys that display A B C D in insert mode
imap <ESC>oA <ESC>ki
imap <ESC>oB <ESC>ji
imap <ESC>oC <ESC>li
imap <ESC>oD <ESC>hi

" quicker window switching
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" for when we forget to use sudo to open/edit a file
cmap w!! w !sudo tee % >/dev/null

"""""""""""
" Plugins "
"""""""""""

" NERDTree settings
let NERDTreeQuitOnOpen=1
let NERDTreeShowBookmarks=1
map <F3> :NERDTreeToggle<CR>
let NERDTreeIgnore=['\.pyc$', '\.pyo$']

" tagbar settings
let g:tagbar_width = 25
let g:tagbar_autoclose=1
let g:tagbar_left=1
let g:tagbar_foldlevel=0
" Don't sort tags by name
let g:tagbar_sort = 0

map <silent> <F4> :TagbarToggle<CR>

" delimitMate settings
" will not jump out of the empty pair in python
au FileType python let b:delimitMate_nesting_quotes = ['"']

" SuperTab settings
let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabContextDefaultCompletionType = "<c-x><c-o>"
" Set backwards mapping to work with snipmate's reverse tabstops
"let g:SuperTabMappingBackward ='<C-Tab>'

" UltiSnips settings
let g:UltiSnipsSnippetDirectories=["UltiSnips", "snippets"]

" syntastic
let g:syntastic_enable_signs=0
let g:syntastic_loc_list_height=5
let g:syntastic_auto_jump=0

" Latex Box for continuous background compilation
"let g:LatexBox_latexmk_options = '-pdf -pvc'

" use latexmkrc to make pdf out of svg with inkscape if missing
let g:LatexBox_latexmk_options = '-use-make'

" vimwiki settings
let g:vimwiki_list = [{}, {'path': '~/workspace/wiki', 'path_html': '~/workspace/wiki/html'}]


" open Projects wiki (testing)
map <Leader>wp 2<Leader>wt
